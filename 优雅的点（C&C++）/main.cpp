#include <stdio.h>

/*
	小易有一个圆心在坐标原点的圆，小易知道圆的半径的平方。小易认为在圆上的点而且横纵坐标都是整数的
	点是优雅的，小易现在想寻找一个算法计算出优雅的点的个数，请你来帮帮他。
	例如：半径的平方如果为25
	优雅的点就有：(+/-3, +/-4), (+/-4, +/-3), (0, +/-5) (+/-5, 0)，一共12个点。 
	
	输入描述:
	输入为一个整数，即为圆半径的平方,范围在32位int范围内。
	
	输出描述:
	输出为一个整数，即为优雅的点的个数
*/ 

int main() {
	int r, i, j, total;
	while(scanf("%d", &r) != EOF){
		total = 0;
		//暂时只考虑第一象限
		for(i = 0; i * i <= r; i++){
			//减少重复遍历次数，只寻找不小于x坐标的 
			for(j = i; j * j <= r; j++){
				//在圆上 
				if(i * i + j * j == r){
					//有一个坐标值为0，只加两种情况，xy坐标交换再加两种 
					if(i == 0 || j == 0){
						total += 4; 
					} 
					//xy坐标点相同，只有四种情况 
					else if(i == j){
						total += 4; 
					} 
					//正常情况下四个象限都有其对应点，xy坐标交换仍然有四种情况 
					else{
						total += 8; 
					}
				}
			}
		}
		printf("%d\n", total);
	}
}
