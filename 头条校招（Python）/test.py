# -*- coding: utf-8 -*-
import sys

'''
    题目描述

    头条的2017校招开始了！为了这次校招，我们组织了一个规模宏大的出题团队。每个出题人都出
    了一些有趣的题目，而我们现在想把这些题目组合成若干场考试出来。在选题之前，我们对题目
    进行了盲审，并定出了每道题的难度系数。一场考试包含3道开放性题目，假设他们的难度从小
    到大分别为a, b, c，我们希望这3道题能满足下列条件：
    a＜= b＜= c
    b - a＜= 10
    c - b＜= 10
    所有出题人一共出了n道开放性题目。现在我们想把这n道题分布到若干场考试中（1场或多场，每
    道题都必须使用且只能用一次），然而由于上述条件的限制，可能有一些考试没法凑够3道题，因
    此出题人就需要多出一些适当难度的题目来让每场考试都达到要求。然而我们出题已经出得很累
    了，你能计算出我们最少还需要再出几道题吗？

    输入
    输入的第一行包含一个整数n，表示目前已经出好的题目数量。
    第二行给出每道题目的难度系数 d1, d2, …, dn。

    输出
    输出只包括一行，即所求的答案。
'''

def main():
    try:
        while True:
            n = int(raw_input())
            d = map(int, sys.stdin.readline().split())
            # 排序
            d.sort()
            # 遍历判断相邻两元素间隔是否小于等于10，统计个数
            count = 0
            for i in range(0, (n - 1)):
                if d[i + 1] - d[i] > 10:
                    count += 1
            # 不能被3整除
            re = (n + count) % 3
            if re > 0:
                count += (3 - re)
            print(count)
    except:
        pass


if __name__ == "__main__":
    main()