#include <stdio.h>

/*
	一个只包含'A'、'B'和'C'的字符串，如果存在某一段长度为3的连续子串中恰好'A'、'B'和'C'各有一
	个，那么这个字符串就是纯净的，否则这个字符串就是暗黑的。例如：
	BAACAACCBAAA 连续子串"CBA"中包含了'A','B','C'各一个，所以是纯净的字符串
	AABBCCAABB 不存在一个长度为3的连续子串包含'A','B','C',所以是暗黑的字符串
	你的任务就是计算出长度为n的字符串(只包含'A'、'B'和'C')，有多少个是暗黑的字符串。 
	
	输入描述:
	输入一个整数n，表示字符串长度(1 ≤ n ≤ 30)
	
	输出描述:
	输出一个整数表示有多少个暗黑字符串
*/

int main() {
	int n, i;
	while(scanf("%d", &n) != EOF){
		long long total;
		long long num[n + 1];
		//初始化一个字符和两个字符时字符串个数 
		num[1] = 3;
		num[2] = 9; 
		//计算暗黑字符串个数 
		for(i = 3; i <= n; i++){
			/*
			前一长度的字符串后俩字母不同时有两种可能，后俩字母相同时有三种可能，根据公式计算可
			知为2n[n-1]+n[n-1](俩字母相同)，则可以在n[n-2]的基础上加上与最后一个字母相同的字母
			达到条件 
			*/ 
			num[i] = 2 * num[i - 1] + num[i - 2]; 
		}
		printf("%d\n", num[n]); 
	}
}
